{
  "beans": {},
  "deployers": {},
  "moddas": {
    "webda/hawk": "lib/hawk:default"
  },
  "models": {
    "graph": {
      "webda/apikey": {}
    },
    "tree": {
      "webda/ownermodel": {
        "webda/apikey": {}
      }
    },
    "list": {
      "webda/apikey": "lib/apikey:default"
    }
  },
  "schemas": {
    "webda/apikey": {
      "type": "object",
      "properties": {
        "_creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Creation date",
          "readOnly": true
        },
        "_lastUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "Last update date",
          "readOnly": true
        },
        "_user": {
          "type": "string",
          "description": "Default owner of the object",
          "readOnly": true
        },
        "public": {
          "type": "boolean",
          "description": "Define if the object is publicly readable",
          "default": false
        },
        "uuid": {
          "type": "string",
          "description": "UUID of the object"
        },
        "name": {
          "type": "string",
          "description": "Friendly user name of the key"
        },
        "permissions": {
          "type": "object",
          "properties": {
            "GET": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "PUT": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "DELETE": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "POST": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "GET",
            "PUT",
            "DELETE",
            "POST"
          ],
          "description": "Retriction on URL to apply to the key\n\nSplit per method, each item of the array contains a regexp to validate the url used"
        },
        "algorithm": {
          "type": "string",
          "description": "Algorithm to use with hawk"
        },
        "origins": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Authorize those origins only (regexp)"
        },
        "whitelist": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If defined the key is only usable from these ips\n\nSupport of DNS is not yet ready"
        }
      },
      "required": [
        "algorithm",
        "name",
        "uuid"
      ],
      "description": "Api Key to use with hawk",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ApiKey"
    },
    "webda/hawk": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the service"
        },
        "url": {
          "type": "string",
          "description": "URL on which to serve the content"
        },
        "keysStore": {
          "type": "string",
          "description": "Key store name",
          "default": "apikeys"
        },
        "dynamicSessionKey": {
          "type": "string",
          "description": "If specified will verify the signature match the key store in session"
        },
        "redirectUrl": {
          "type": "string",
          "description": "redirect endpoint"
        },
        "redirectUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Allowed redirection with CSRF"
        },
        "openapi": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "type"
      ],
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "HawkService"
    }
  }
}