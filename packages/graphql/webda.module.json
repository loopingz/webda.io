{
  "beans": {},
  "deployers": {},
  "moddas": {
    "Webda/GraphQLService": "lib/graphql:GraphQLService"
  },
  "models": {
    "graph": {},
    "tree": {},
    "plurals": {},
    "list": {},
    "reflections": {}
  },
  "schemas": {
    "Webda/BinaryFile": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "description": "Will be computed by the service\n\nhash of the content"
        },
        "challenge": {
          "type": "string",
          "description": "Will be computed by the service\n\nhash of the content prefixed by 'WEBDA'"
        },
        "size": {
          "type": "number",
          "description": "Size of the binary"
        },
        "name": {
          "type": "string",
          "description": "Current name"
        },
        "mimetype": {
          "type": "string",
          "description": "Mimetype of the binary"
        },
        "metadata": {
          "description": "Metadatas stored along with the binary"
        },
        "originalname": {
          "type": "string",
          "description": "Original name"
        }
      },
      "required": [
        "mimetype",
        "name",
        "size"
      ],
      "description": "Represent a file to store",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "BinaryFile"
    },
    "Webda/GraphQLService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the service"
        },
        "url": {
          "type": "string",
          "description": "URL on which to serve the content"
        },
        "operations": {
          "type": "boolean",
          "description": "Expose objects as operations too",
          "default": true
        },
        "nameTransfomer": {
          "$ref": "#/definitions/TransformCaseType",
          "description": "Transform the name of the model to be used in the URL",
          "default": "camelCase"
        },
        "queryMethod": {
          "type": "string",
          "enum": [
            "PUT",
            "GET"
          ],
          "description": "Method used for query objects",
          "default": "PUT"
        },
        "models": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of models to include\n\nIf model is prefixed with a ! it will be excluded",
          "default": [
            "*"
          ]
        },
        "maxOperationsPerRequest": {
          "type": "number",
          "description": "Max number of requests allowed within a graphql query or mutation",
          "default": 10
        },
        "userModel": {
          "type": "string",
          "description": "User model to expose",
          "default": "User"
        },
        "exposeMe": {
          "type": "boolean",
          "description": "Expose current user in the context with me",
          "default": true
        },
        "exposeGraphiQL": {
          "type": "boolean",
          "description": "Expose the schema"
        },
        "globalSubscription": {
          "type": "boolean",
          "description": "Expose a aggregation of all available subscriptions"
        },
        "openapi": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "exposeGraphiQL",
        "exposeMe",
        "globalSubscription",
        "maxOperationsPerRequest",
        "type",
        "userModel"
      ],
      "description": "Parameters for the GraphQL service",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "definitions": {
        "TransformCaseType": {
          "type": "string",
          "enum": [
            "none",
            "camelCase",
            "ENV_VAR",
            "snake_case",
            "PascalCase",
            "kebab-case",
            "UPPERCASE",
            "lowercase"
          ],
          "description": "Transform the name of the model to be used in the URL"
        }
      },
      "title": "GraphQLService"
    }
  }
}