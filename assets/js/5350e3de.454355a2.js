"use strict";(self.webpackChunk_webda_docs=self.webpackChunk_webda_docs||[]).push([[46040],{14316:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>d});var r=i(17624),s=i(4552);const t={},o="Binary",a={id:"Concepts/Services/Binary",title:"Binary",description:"The storage of files is handle by those categories, we have two services FileStorage and S3Storage",source:"@site/pages/Concepts/Services/Binary.md",sourceDirName:"Concepts/Services",slug:"/Concepts/Services/Binary",permalink:"/docs/Concepts/Services/Binary",draft:!1,unlisted:!1,editUrl:"https://github.com/loopingz/webda.io/tree/docs/pages/Concepts/Services/Binary.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Services",permalink:"/docs/Concepts/Services/"},next:{title:"Configuration Service",permalink:"/docs/Concepts/Services/ConfigurationService"}},c={},d=[{value:"Map",id:"map",level:2},{value:"S3Binary",id:"s3binary",level:2},{value:"FileBinary",id:"filebinary",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.M)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"binary",children:"Binary"}),"\n",(0,r.jsx)(n.p,{children:"The storage of files is handle by those categories, we have two services FileStorage and S3Storage"}),"\n",(0,r.jsx)(n.p,{children:"The API exposed is"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /binary/\\{store}/\\{uuid}/\\{property}/\\{index}\nPUT /binary/upload/\\{store}/\\{uuid}/\\{property}/\\{index}\nDELETE /binary/\\{store}/\\{uuid}/\\{property}/\\{index}/\\{hash}\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can reduce the exposition by adding an expose attribute as on Store"}),"\n",(0,r.jsx)(n.p,{children:"As you can only add a binary attached to an object stored on the system, the url reflect this :"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"{store} is the Store of the object you want attached to"}),"\n",(0,r.jsx)(n.li,{children:"{uid} is the Object uuid"}),"\n",(0,r.jsx)(n.li,{children:"{property} is the field of the Object"}),"\n",(0,r.jsx)(n.li,{children:"{index} is the index of the Binary"}),"\n",(0,r.jsx)(n.li,{children:"{hash} the hash of the file to delete to ensure, if someone insert another file you don't delete the wrong file by accident"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"map",children:"Map"}),"\n",(0,r.jsx)(n.p,{children:"To prevent people for adding files everywhere you specify in which object and fields you can post a file."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:'title="webda.config.json"',children:'"map": {\n\t"users": ["s3images"]\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"The above configuration will allow a user to link a binary to a user on the field s3images."}),"\n",(0,r.jsx)(n.p,{children:"So with the previous URL that means to play with binaries for a User ( uuid: user_02 )"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"To add\nPUT /binary/upload/users/user_02/s3images/add\n\nTo replace\nPUT /binary/upload/users/user_02/s3images/0\n\nTo get\nGET /binary/users/user_02/s3images/0\n\nTo delete\nDELETE /binary/users/user_02/s3images/0/1928434324...\n"})}),"\n",(0,r.jsx)(n.h2,{id:"s3binary",children:"S3Binary"}),"\n",(0,r.jsx)(n.p,{children:"To configure just add the parameter bucket"}),"\n",(0,r.jsx)(n.p,{children:"{@link S3Binary}"}),"\n",(0,r.jsx)(n.h2,{id:"filebinary",children:"FileBinary"}),"\n",(0,r.jsx)(n.p,{children:"To configure just add the parameter folder"})]})}function h(e={}){const{wrapper:n}={...(0,s.M)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},4552:(e,n,i)=>{i.d(n,{I:()=>a,M:()=>o});var r=i(11504);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);