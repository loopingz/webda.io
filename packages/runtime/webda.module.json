{
  "beans": {},
  "deployers": {},
  "moddas": {
    "Webda/ClusterService": "lib/services/cluster:ClusterService",
    "Webda/EchoService": "lib/services/echo:EchoService",
    "Webda/MigrationStore": "lib/stores/migration:MigrationStore",
    "Webda/PasswordEncryptionService": "lib/utils/password:PasswordEncryptionService",
    "Webda/ProxyService": "lib/services/proxy:ProxyService",
    "Webda/VersionService": "lib/services/version:VersionService"
  },
  "models": {
    "graph": {
      "Webda/BinaryModel": {
        "binaries": [
          {
            "attribute": "__binary",
            "cardinality": "ONE"
          }
        ]
      }
    },
    "tree": {
      "Webda/BinaryModel": {}
    },
    "plurals": {},
    "list": {
      "Webda/BinaryModel": "lib/models/binarymodel:BinaryModel"
    },
    "reflections": {
      "Webda/BinaryModel": {
        "__data": "T",
        "__binary": "Binary",
        "__dataUpdated": "boolean",
        "__class": "CoreModelDefinition<this>",
        "__type": "string",
        "__types": "string[]",
        "__ctx": "OperationContext",
        "__store": "Store<this>",
        "__dirty": "Set<string | symbol>",
        "_creationDate": "Date",
        "_lastUpdate": "Date",
        "__deleted": "boolean"
      }
    }
  },
  "schemas": {
    "Webda/BinaryFile": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "description": "Will be computed by the service\n\nhash of the content"
        },
        "challenge": {
          "type": "string",
          "description": "Will be computed by the service\n\nhash of the content prefixed by 'WEBDA'"
        },
        "size": {
          "type": "number",
          "description": "Size of the binary"
        },
        "name": {
          "type": "string",
          "description": "Current name"
        },
        "mimetype": {
          "type": "string",
          "description": "Mimetype of the binary"
        },
        "metadata": {
          "description": "Metadatas stored along with the binary"
        },
        "originalname": {
          "type": "string",
          "description": "Original name"
        }
      },
      "required": [
        "mimetype",
        "name",
        "size"
      ],
      "description": "Represent a file to store",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "BinaryFile"
    },
    "Webda/BinaryModel": {
      "type": "object",
      "properties": {
        "_creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Creation date",
          "readOnly": true
        },
        "_lastUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "Last update date",
          "readOnly": true
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "BinaryModel"
    },
    "Webda/ClusterService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the service"
        },
        "url": {
          "type": "string",
          "description": "URL on which to serve the content"
        },
        "pubsub": {
          "type": "string",
          "default": "PubSub"
        },
        "ttl": {
          "type": "number",
          "default": "twice keepAlive"
        },
        "keepAlive": {
          "type": "number",
          "default": 30000
        },
        "openapi": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "keepAlive",
        "pubsub",
        "ttl",
        "type"
      ],
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ClusterService"
    },
    "Webda/EchoService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the service"
        },
        "url": {
          "type": "string",
          "description": "Url to expose the service"
        },
        "mime": {
          "type": "string",
          "description": "Mime of the result"
        },
        "result": {
          "anyOf": [
            {
              "type": "string"
            },
            {}
          ],
          "description": "result to write on the url"
        },
        "openapi": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "result",
        "type",
        "url"
      ],
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "EchoService"
    },
    "Webda/MigrationStore": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the service"
        },
        "url": {
          "type": "string",
          "description": "URL on which to serve the content"
        },
        "model": {
          "type": "string",
          "description": "Webda model to use within the Store",
          "default": "Webda/CoreModel"
        },
        "additionalModels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Additional models\n\nAllow this store to manage other models",
          "default": []
        },
        "asyncDelete": {
          "type": "boolean",
          "description": "async delete"
        },
        "expose": {
          "$ref": "#/definitions/StoreExposeParameters",
          "description": "Expose the service to an urls",
          "deprecated": "will probably be removed in 4.0 in favor of Expose annotation"
        },
        "strict": {
          "type": "boolean",
          "description": "Allow to load object that does not have the type data\n\nIf set to true, then the Store will only managed the defined _model and no model extending this one",
          "default": false
        },
        "defaultModel": {
          "type": "boolean",
          "description": "When __type model not found, use the model If strict is setup this parameter is not used",
          "default": true
        },
        "forceModel": {
          "type": "boolean",
          "description": "If set, Store will ignore the __type",
          "default": false
        },
        "slowQueryThreshold": {
          "type": "number",
          "description": "Slow query threshold",
          "default": 30000
        },
        "modelAliases": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Model Aliases to allow easier rename of Model"
        },
        "noCache": {
          "type": "boolean",
          "description": "Disable default memory cache"
        },
        "from": {
          "type": "string",
          "description": "From store"
        },
        "to": {
          "type": "string",
          "description": "To store"
        },
        "openapi": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "asyncDelete",
        "from",
        "slowQueryThreshold",
        "to",
        "type"
      ],
      "$schema": "http://json-schema.org/draft-07/schema#",
      "definitions": {
        "StoreExposeParameters": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL endpoint to use to expose REST Resources API",
              "default": "service.getName().toLowerCase()"
            },
            "restrict": {
              "type": "object",
              "properties": {
                "create": {
                  "type": "boolean",
                  "description": "Do not expose the POST"
                },
                "update": {
                  "type": "boolean",
                  "description": "Do not expose the PUT and PATCH"
                },
                "get": {
                  "type": "boolean",
                  "description": "Do not expose the GET"
                },
                "delete": {
                  "type": "boolean",
                  "description": "Do not expose the DELETE"
                },
                "query": {
                  "type": "boolean",
                  "description": "Do not expose the query endpoint"
                }
              },
              "description": "You can restrict any part of the CRUD",
              "default": {}
            },
            "queryMethod": {
              "type": "string",
              "enum": [
                "PUT",
                "GET"
              ],
              "description": "For confidentiality sometimes you might prefer to expose query through PUT To avoid GET logging",
              "default": "GET"
            }
          },
          "deprecated": "Store should not be exposed directly anymore\nYou should use the DomainService instead"
        }
      },
      "title": "MigrationStore"
    },
    "Webda/PasswordEncryptionService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the service"
        },
        "url": {
          "type": "string",
          "description": "URL on which to serve the content"
        },
        "openapi": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "type"
      ],
      "description": "Interface to specify the Service parameters",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "PasswordEncryptionService"
    },
    "Webda/ProxyService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the service"
        },
        "url": {
          "type": "string",
          "description": "URL to expose"
        },
        "backend": {
          "type": "string",
          "description": "URL to proxy to"
        },
        "requireAuthentication": {
          "type": "boolean",
          "description": "Helper to refuse any request if user is not auth"
        },
        "proxyHeaders": {
          "type": "boolean",
          "description": "Add X-Forwarded-* headers",
          "default": true
        },
        "openapi": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "backend",
        "proxyHeaders",
        "requireAuthentication",
        "type"
      ],
      "description": "Proxy to a backend service",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ProxyService"
    },
    "Webda/VersionService": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the service"
        },
        "url": {
          "type": "string",
          "description": "URL on which to serve the content",
          "default": "/version"
        },
        "version": {
          "type": "string",
          "description": "To force version otherwise would read from package.json"
        },
        "openapi": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "type"
      ],
      "description": "Version parameters",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "VersionService"
    }
  }
}