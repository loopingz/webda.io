import { Terminal, WorkerOutput, WorkerLogLevel, WorkerMessage } from "@webda/workout";
import * as colors from "colors";

export class WebdaTerminal extends Terminal {
  versions;
  constructor(
    wo: WorkerOutput,
    versions,
    logo: string[] = undefined,
    level: WorkerLogLevel = undefined,
    format: string = undefined,
    tty: boolean = undefined
  ) {
    super(wo, level, format, tty);
    this.versions = versions;
    this.setTitle("Webda");
    this.setLogo(logo);
  }

  handleTitleMessage(msg: WorkerMessage) {
    this.setTitle(msg.title);
  }

  setDefaultLogo() {
    let logo = `[48;5;236mÂ [48;5;61mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;67mÂ [48;5;178mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;136mÂ [48;5;237mÂ [0m
      [48;5;61mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;208mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;172mÂ [0m
      [48;5;61mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;244mÂ [48;5;208mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;172mÂ [0m
      [48;5;61mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;66mÂ [48;5;208mÂ Â Â [48;5;172mÂ [48;5;137mÂ Â [48;5;208mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;172mÂ [0m
      [48;5;61mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;66mÂ [48;5;208mÂ Â Â Â Â Â Â Â Â Â Â Â Â [48;5;172mÂ [0m
      [48;5;61mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;244mÂ [48;5;208mÂ Â Â Â Â Â Â Â Â Â Â Â Â [48;5;172mÂ [0m
      [48;5;61mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;146mÂ [48;5;231mÂ Â Â Â Â Â [48;5;255mÂ [48;5;60mÂ [48;5;172mÂ [48;5;208mÂ Â Â Â Â Â Â Â Â Â Â [48;5;172mÂ [0m
      [48;5;61mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;104mÂ [48;5;231mÂ Â Â Â Â Â Â Â Â Â [48;5;146mÂ [48;5;137mÂ [48;5;208mÂ Â Â Â Â Â Â Â Â Â [48;5;172mÂ [0m
      [48;5;61mÂ Â Â Â Â Â Â Â Â Â Â [48;5;231mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;96mÂ [48;5;208mÂ Â Â Â Â Â Â Â Â Â [48;5;172mÂ [0m
      [48;5;61mÂ Â Â Â Â Â Â Â Â Â [48;5;254mÂ [48;5;231mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;188mÂ [48;5;60mÂ [48;5;137mÂ [48;5;208mÂ Â Â Â Â Â Â Â [48;5;172mÂ [0m
      [48;5;72mÂ [48;5;107mÂ Â Â Â Â Â [48;5;67mÂ [48;5;231mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;255mÂ [48;5;61mÂ [48;5;255mÂ [48;5;231mÂ Â Â Â Â [48;5;195mÂ [0m
      [48;5;108mÂ [48;5;107mÂ Â Â Â Â [48;5;60mÂ [48;5;231mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;67mÂ [48;5;231mÂ Â Â Â Â [48;5;255mÂ [0m
      [48;5;108mÂ [48;5;107mÂ Â Â Â Â [48;5;66mÂ [48;5;146mÂ [48;5;231mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;188mÂ [48;5;146mÂ [48;5;231mÂ Â Â Â Â [48;5;255mÂ [0m
      [48;5;108mÂ [48;5;107mÂ Â Â Â Â Â Â [48;5;60mÂ [48;5;146mÂ [48;5;231mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;103mÂ [48;5;146mÂ [48;5;231mÂ Â Â Â Â Â [48;5;255mÂ [0m
      [48;5;108mÂ [48;5;107mÂ Â Â Â Â Â Â Â Â Â [48;5;65mÂ Â Â Â Â [48;5;239mÂ Â Â Â [48;5;65mÂ Â Â Â Â [48;5;237mÂ [48;5;249mÂ Â [48;5;250mÂ [48;5;252mÂ [48;5;254mÂ [48;5;231mÂ Â Â Â Â Â Â Â [48;5;255mÂ [0m
      [48;5;108mÂ [48;5;107mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;241mÂ [48;5;231mÂ Â Â Â Â Â Â Â Â Â Â Â Â [48;5;255mÂ [0m
      [48;5;108mÂ [48;5;107mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;59mÂ [48;5;108mÂ [48;5;107mÂ Â [48;5;108mÂ [48;5;243mÂ [48;5;231mÂ Â Â Â Â Â Â Â Â Â Â Â Â [48;5;255mÂ [0m
      [48;5;108mÂ [48;5;107mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;242mÂ [48;5;231mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;255mÂ [0m
      [48;5;108mÂ [48;5;107mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;242mÂ [48;5;231mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;255mÂ [0m
      [48;5;72mÂ [48;5;107mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;240mÂ [48;5;231mÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â [48;5;146mÂ [0m
          `.split("\n");
    if (Object.keys(this.versions).length) {
      let logoLength = Math.max(...logo.map(this.getTrueLength));
      logo.push("");
      for (let j in this.versions) {
        let version: string = colors.bold(`${j} - v${this.versions[j].version}`);
        version = version.padStart(version.length + (logoLength - version.length) / 2).padEnd(logoLength);
        logo.push(version);
      }
    }
  }

  setTitle(title: string = "") {
    this.title = WebdaTerminal.webdaize(title, this.tty);
  }

  getBar(size: number, complete: boolean) {
    if (complete) {
      return "[" + colors.bold(colors.yellow("\u2836".repeat(size)));
    } else {
      return " ".repeat(size) + "]";
    }
  }

  /**
   * Colorized any 'da' letters from webda within output
   *
   * @param str
   * @returns
   */
  static webdaize(str, isTTY: boolean = process.stdout.isTTY) {
    if (!isTTY) {
      return str;
    }
    return str.replace(/(web)(da)/gi, "$1" + "$2".yellow);
  }

  /**
   * @override
   */
  displayString(str: string, limit: number = undefined) {
    return WebdaTerminal.webdaize(super.displayString(str, limit), this.tty);
  }
}
