"use strict";(self.webpackChunk_webda_docs=self.webpackChunk_webda_docs||[]).push([[35916],{63812:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=t(17624),o=t(4552);const a={},s="WebdaQL Developement",i={id:"WebdaQL Development",title:"WebdaQL Developement",description:"References",source:"@site/contribute/WebdaQL Development.md",sourceDirName:".",slug:"/WebdaQL Development",permalink:"/contribute/WebdaQL Development",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Webda v4",permalink:"/contribute/Ideas/v4"}},d={},l=[{value:"References",id:"references",level:2},{value:"ANTRL4TS",id:"antrl4ts",level:2},{value:"Testing",id:"testing",level:2},{value:"DynamoDB",id:"dynamodb",level:2},{value:"Operators",id:"operators",level:3},{value:"Firebase",id:"firebase",level:2},{value:"Operators",id:"operators-1",level:3},{value:"MongoDB",id:"mongodb",level:2},{value:"Operators",id:"operators-2",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.M)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"webdaql-developement",children:"WebdaQL Developement"}),"\n",(0,r.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,r.jsxs)(n.p,{children:["AWS: ",(0,r.jsx)(n.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Query.html",children:"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Query.html"}),"\n",(0,r.jsx)(n.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Scan.html",children:"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Scan.html"})]}),"\n",(0,r.jsxs)(n.p,{children:["Firebase: ",(0,r.jsx)(n.a,{href:"https://firebase.google.com/docs/firestore/query-data/queries",children:"https://firebase.google.com/docs/firestore/query-data/queries"})]}),"\n",(0,r.jsxs)(n.p,{children:["MongoDB: ",(0,r.jsx)(n.a,{href:"https://www.mongodb.com/docs/manual/tutorial/query-documents/",children:"https://www.mongodb.com/docs/manual/tutorial/query-documents/"})]}),"\n",(0,r.jsx)(n.h2,{id:"antrl4ts",children:"ANTRL4TS"}),"\n",(0,r.jsx)(n.p,{children:"Validator: Ensure the parsing of the query\nVisitor: query() / filter(CoreModel): boolean"}),"\n",(0,r.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,r.jsxs)(n.p,{children:["The default Store unit test includes a ",(0,r.jsx)(n.code,{children:"query"})," test"]}),"\n",(0,r.jsx)(n.p,{children:"It creates 1000 users"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"state"})," attribute is split between ",(0,r.jsx)(n.code,{children:'"CA", "OR", "NY", "FL"'})," evenly (250 each)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"order"})," attribute equals 0 to 999"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"team.id"})," attribute is split evenly from 0 to 19 (50 each)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"role"})," attribute is split evenly from 0 to 9 (100 each)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Then a few query are tested:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'state = "CA" -> 250\nteam.id > 15 -> 200\nteam.id >= 15 -> 250\nstate IN ["CA", "NY"] -> 500\nstate IN ["CA", "NY", "NV"] -> 500\nstate = "CA" AND team.id > 15 -> 50\nteam.id < 5 OR team.id > 15 -> 450\nrole < 5 AND team.id > 10 OR team.id > 15 -> 400\nrole < 5 AND (team.id > 10 OR team.id > 15) -> 200\n'})}),"\n",(0,r.jsx)(n.h2,{id:"dynamodb",children:"DynamoDB"}),"\n",(0,r.jsx)(n.p,{children:"Require Key, then Sort\nThen filtering"}),"\n",(0,r.jsx)(n.h3,{id:"operators",children:"Operators"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"= equal to\n< less than\n> greater than\n<= less than or equal to\n>= greater than or equal to\na BETWEEN b AND c\n\nFor filtering:\nOR\nIN\nCONTAINS\n"})}),"\n",(0,r.jsx)(n.h2,{id:"firebase",children:"Firebase"}),"\n",(0,r.jsx)(n.p,{children:"You can't combine not-in and != in a compound query.\nIn a compound query, range (<, <=, >, >=) and not equals (!=, not-in) comparisons must all filter on the same field."}),"\n",(0,r.jsx)(n.h3,{id:"operators-1",children:"Operators"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"< less than\n<= less than or equal to\n== equal to\n> greater than\n>= greater than or equal to\n!= not equal to\narray-contains\narray-contains-any\nin\nnot-in\n"})}),"\n",(0,r.jsx)(n.h2,{id:"mongodb",children:"MongoDB"}),"\n",(0,r.jsx)(n.h3,{id:"operators-2",children:"Operators"})]})}function h(e={}){const{wrapper:n}={...(0,o.M)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},4552:(e,n,t)=>{t.d(n,{I:()=>i,M:()=>s});var r=t(11504);const o={},a=r.createContext(o);function s(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);