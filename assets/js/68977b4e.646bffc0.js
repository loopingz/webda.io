"use strict";(self.webpackChunk_webda_docs=self.webpackChunk_webda_docs||[]).push([[15680],{75788:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=t(17624),s=t(4552);const i={},o="Routes",a={id:"REST/Routes",title:"Routes",description:"API have endpoints also called routes.",source:"@site/pages/REST/Routes.md",sourceDirName:"REST",slug:"/REST/Routes",permalink:"/docs/REST/Routes",draft:!1,unlisted:!1,editUrl:"https://github.com/loopingz/webda.io/tree/docs/pages/REST/Routes.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"OpenAPI Defintion",permalink:"/docs/REST/OpenAPI"},next:{title:"Protocols",permalink:"/docs/Protocols"}},l={},d=[{value:"Path arguments",id:"path-arguments",level:2},{value:"Query arguments",id:"query-arguments",level:2},{value:"Prefix",id:"prefix",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.M)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"routes",children:"Routes"}),"\n",(0,r.jsx)(n.p,{children:"API have endpoints also called routes."}),"\n",(0,r.jsx)(n.p,{children:"To define a Route it is pretty simple."}),"\n",(0,r.jsx)(n.p,{children:"In a service define a method with a single parameter context"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="src/myservice.ts"',children:'class Service {\n    ...\n    @Route("/hi", ["GET"])\n    myRoute(context: Context) {\n\n    }\n    ...\n}\n\n'})}),"\n",(0,r.jsxs)(n.p,{children:["We use ",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/uri-templates",children:"uri-templates"})," to parse uri"]}),"\n",(0,r.jsx)(n.h2,{id:"path-arguments",children:"Path arguments"}),"\n",(0,r.jsxs)(n.p,{children:["Wildcard path: ",(0,r.jsx)(n.code,{children:"/test/{path+}"})," will map all the rest of the uri"]}),"\n",(0,r.jsx)(n.h2,{id:"query-arguments",children:"Query arguments"}),"\n",(0,r.jsxs)(n.p,{children:["The search part of the query can be usefull too and need to be declared\nIt starts with a ",(0,r.jsx)(n.code,{children:"{?...}"})]}),"\n",(0,r.jsxs)(n.p,{children:["Each argument of the query is then named ",(0,r.jsx)(n.code,{children:"{?arg1,arg2,arg3?,args*}"})]}),"\n",(0,r.jsx)(n.p,{children:"In the above example:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"arg1 is mandatory"}),"\n",(0,r.jsx)(n.li,{children:"arg2 is mandatory"}),"\n",(0,r.jsx)(n.li,{children:"arg3 is optional"}),"\n",(0,r.jsx)(n.li,{children:"args collects all the remaining query params"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["If no query params is defined as mandatory, then query is optional\nIf you want to collect all params while making the query params mandatory use the ",(0,r.jsx)(n.code,{children:"+"})," sign instead of ",(0,r.jsx)(n.code,{children:"*"})]}),"\n",(0,r.jsx)(n.h2,{id:"prefix",children:"Prefix"}),"\n",(0,r.jsxs)(n.p,{children:["You can prefix all routes by adding a ",(0,r.jsx)(n.code,{children:"routePrefix"})," in your global parameters of webda.\nTo override the prefix you can use the ",(0,r.jsx)(n.code,{children:"//"})," in your route definition, to define it as absolute."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# With a api prefix defined\n//test/plop => /test/plop\n/api/plop => /api/plop\n/plop2 => /api/plop2\n"})}),"\n",(0,r.jsx)(n.h1,{id:"conditional-routes",children:"Conditional Routes"}),"\n",(0,r.jsxs)(n.p,{children:["When using the ",(0,r.jsx)(n.code,{children:"@Route"})," annotation, you can still do conditional expose by overriding default behavior of ",(0,r.jsx)(n.code,{children:"getUrl"})," method."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'  /**\n   * @override\n   */\n  getUrl(url: string, methods: HttpMethodType[]) {\n    // If url is absolute\n    if (url.startsWith("/")) {\n      return url;\n    }\n\n    // Parent url to find here\n    const expose = this.parameters.expose;\n    if (\n      !expose.url ||\n      (url === "." && methods.includes("POST") && expose.restrict.create) ||\n      (url === "./{uuid}" && methods.includes("DELETE") && expose.restrict.delete) ||\n      (url === "./{uuid}" && methods.includes("PATCH") && expose.restrict.update) ||\n      (url === "./{uuid}" && methods.includes("PUT") && expose.restrict.update) ||\n      (url === "./{uuid}" && methods.includes("GET") && expose.restrict.get) ||\n      (url === ".{?q}" && methods.includes("GET") && expose.restrict.query) ||\n      (url === "." && methods.includes("PUT") && expose.restrict.query)\n    ) {\n      return undefined;\n    }\n    return super.getUrl(url, methods);\n  }\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.M)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},4552:(e,n,t)=>{t.d(n,{I:()=>a,M:()=>o});var r=t(11504);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);