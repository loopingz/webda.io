{
  "moddas": {
    "webdademo/anotherservice": "lib/services/compiler:AnotherService",
    "webdademo/customreusableservice": "lib/services/reusable:default",
    "webdademo/fourthotherservice": "lib/services/compiler:FourthOtherService",
    "webdademo/queueservice": "lib/services/compiler:QueueService",
    "webdademo/secondotherservice": "lib/services/compiler:SecondOtherService",
    "webdademo/simpleservice": "lib/services/compiler:SimpleService",
    "webdademo/thirdotherservice": "lib/services/compiler:ThirdOtherService"
  },
  "beans": {
    "beans/beanservice": "lib/services/bean",
    "beans/customservice": "lib/services/custom"
  },
  "models": {
    "webdademo/company": "lib/models/company:Company",
    "webdademo/contact": "lib/models/contact:default",
    "webdademo/project": "lib/models/project:Project",
    "webdademo/user": "lib/models/user:User"
  },
  "deployers": {
    "webdademo/customdeployer": "lib/services/deployer:CustomDeployer"
  },
  "schemas": {
    "webdademo/user": {
      "type": "object",
      "properties": {
        "_creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Creation date",
          "readOnly": true
        },
        "_lastUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "Last update date",
          "readOnly": true
        },
        "_company": {
          "$ref": "#/definitions/ModelParent%3Cclass-models_company.ts-131-283-models_company.ts-0-284%3E",
          "readOnly": true
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "$schema": "http://json-schema.org/draft-07/schema#",
      "definitions": {
        "ModelParent<class-models_company.ts-131-283-models_company.ts-0-284>": {
          "$ref": "#/definitions/ModelLink%3Cclass-models_company.ts-131-283-models_company.ts-0-284%2Cany%3E",
          "description": "Define the parent of the model"
        },
        "ModelLink<class-models_company.ts-131-283-models_company.ts-0-284,any>": {
          "$ref": "#/definitions/ModelLinker%3Cclass-models_company.ts-131-283-models_company.ts-0-284%3E",
          "description": "Define a link to 1:n relation"
        },
        "ModelLinker<class-models_company.ts-131-283-models_company.ts-0-284>": {
          "type": "string"
        }
      },
      "title": "User"
    },
    "webdademo/contact": {
      "type": "object",
      "properties": {
        "_creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Creation date",
          "readOnly": true
        },
        "_lastUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "Last update date",
          "readOnly": true
        },
        "firstName": {
          "type": "string",
          "description": "Contact firstname"
        },
        "lastName": {
          "type": "string",
          "description": "Contact lastname"
        },
        "type": {
          "type": "string",
          "enum": [
            "PERSONAL",
            "PROFESSIONAL"
          ],
          "description": "Contact type"
        },
        "age": {
          "type": "number",
          "description": "Contact age",
          "minimum": 0
        },
        "readonly": {
          "type": "number",
          "description": "To indicate a property that will be set by server, similar to @SchemaOptional",
          "readOnly": true
        },
        "optional": {
          "type": "string",
          "description": "Useful to auto complete on the creation side without forcing UI to push the attribute"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "type",
        "age"
      ],
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Contact",
      "additionalProperties": {
        "description": "Allow mine"
      }
    },
    "beans/beanservice": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the service"
        },
        "url": {
          "type": "string",
          "description": "URL on which to serve the content"
        },
        "openapi": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "type"
      ],
      "description": "Interface to specify the Service parameters",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ThirdOtherService"
    },
    "webdademo/simpleservice": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the service"
        },
        "url": {
          "type": "string",
          "description": "URL on which to serve the content"
        },
        "openapi": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "type"
      ],
      "description": "Interface to specify the Service parameters",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ThirdOtherService"
    },
    "webdademo/anotherservice": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the service"
        },
        "url": {
          "type": "string",
          "description": "URL on which to serve the content"
        },
        "anotherParameter": {
          "type": "string"
        },
        "interfaceParam": {
          "$ref": "#/definitions/Partial%3Cinterface-829200435-159-207-829200435-0-1151%3E",
          "description": "The Partial will generate a new $ref"
        },
        "openapi": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "anotherParameter",
        "interfaceParam",
        "type"
      ],
      "$schema": "http://json-schema.org/draft-07/schema#",
      "definitions": {
        "Partial<interface-829200435-159-207-829200435-0-1151>": {
          "type": "object",
          "properties": {
            "test": {
              "type": "string"
            }
          }
        }
      },
      "title": "AnotherService"
    },
    "webdademo/secondotherservice": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the service"
        },
        "url": {
          "type": "string",
          "description": "URL on which to serve the content"
        },
        "anotherParameter": {
          "type": "string"
        },
        "interfaceParam": {
          "$ref": "#/definitions/Partial%3Cinterface-829200435-159-207-829200435-0-1151%3E",
          "description": "The Partial will generate a new $ref"
        },
        "openapi": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "anotherParameter",
        "interfaceParam",
        "type"
      ],
      "$schema": "http://json-schema.org/draft-07/schema#",
      "definitions": {
        "Partial<interface-829200435-159-207-829200435-0-1151>": {
          "type": "object",
          "properties": {
            "test": {
              "type": "string"
            }
          }
        }
      },
      "title": "SecondOtherService"
    },
    "webdademo/thirdotherservice": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the service"
        },
        "url": {
          "type": "string",
          "description": "URL on which to serve the content"
        },
        "openapi": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "type"
      ],
      "description": "Interface to specify the Service parameters",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ThirdOtherService"
    },
    "webdademo/fourthotherservice": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the service"
        },
        "url": {
          "type": "string",
          "description": "URL on which to serve the content"
        },
        "anotherParameter": {
          "type": "string"
        },
        "interfaceParam": {
          "$ref": "#/definitions/Partial%3Cinterface-829200435-159-207-829200435-0-1151%3E",
          "description": "The Partial will generate a new $ref"
        },
        "fourthParameter": {
          "type": "number",
          "minimum": 100,
          "maximum": 1000
        },
        "openapi": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "anotherParameter",
        "fourthParameter",
        "interfaceParam",
        "type"
      ],
      "$schema": "http://json-schema.org/draft-07/schema#",
      "definitions": {
        "Partial<interface-829200435-159-207-829200435-0-1151>": {
          "type": "object",
          "properties": {
            "test": {
              "type": "string"
            }
          }
        }
      },
      "title": "FourthOtherService"
    },
    "webdademo/queueservice": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the service"
        },
        "url": {
          "type": "string",
          "description": "URL on which to serve the content"
        },
        "workerDelayer": {
          "type": "object",
          "properties": {
            "interval": {
              "type": "number",
              "description": "Interval"
            },
            "type": {
              "type": "string",
              "description": "Type of delayer registered in WaitDelayerFactoryRegistry"
            }
          },
          "required": [
            "interval",
            "type"
          ],
          "description": "Delayer between two failed attempts to process messages"
        },
        "workerParallelism": {
          "type": "boolean",
          "description": "Define if worker should process multi message received in //",
          "default": true
        },
        "maxConsumers": {
          "type": "number",
          "description": "Max number of queue consumers Queue will auto increase to this max number if queue is loaded and it will decrease to just one consumer if no messages are available",
          "default": 10
        },
        "expire": {
          "type": "number",
          "description": "Number of seconds before droping message",
          "default": 30
        },
        "folder": {
          "type": "string",
          "description": "Where to store the queue"
        },
        "openapi": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "folder",
        "maxConsumers",
        "type"
      ],
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QueueService"
    },
    "webdademo/testinput": {
      "type": "object",
      "properties": {
        "test": {
          "type": "string"
        },
        "optional": {
          "type": "string"
        }
      },
      "required": [
        "test"
      ],
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "testInput"
    },
    "webdademo/testoutput": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string"
        }
      },
      "required": [
        "result"
      ],
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "testOutput"
    },
    "beans/customservice": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the service"
        },
        "url": {
          "type": "string",
          "description": "URL on which to serve the content"
        },
        "introspection": {
          "$ref": "#/definitions/Partial%3Cclass-1131383939-1581-2065-1131383939-0-7374976353190%3E"
        }
      },
      "required": [
        "introspection",
        "type"
      ],
      "$schema": "http://json-schema.org/draft-07/schema#",
      "definitions": {
        "Partial<class-1131383939-1581-2065-1131383939-0-7374976353190>": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of the service"
            },
            "url": {
              "type": "string",
              "description": "URL on which to serve the content"
            }
          }
        }
      },
      "title": "CustomService"
    },
    "webdademo/customdeployer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CustomDeployer"
    },
    "webdademo/customreusableservice": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the service"
        },
        "url": {
          "type": "string",
          "description": "URL on which to serve the content"
        },
        "mandatoryField": {
          "type": "string"
        },
        "openapi": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "mandatoryField",
        "type"
      ],
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CustomReusableService"
    }
  }
}